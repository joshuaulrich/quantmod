#useDynLib(quantmod)
importFrom(graphics,plot)
importFrom(stats,predict)
importFrom(stats,lag)
importFrom(stats,fitted)
importFrom(stats,fitted.values)
importFrom(stats,coefficients)
importFrom(stats,coef)
importFrom(stats,vcov)
importFrom(stats,logLik)
importFrom(stats,residuals)
importFrom(stats,resid)
importFrom(stats,anova)
importFrom(zoo,as.zoo)
#importFrom(zoo,cbind.zoo)
#export(ohlcz,ohlcq)
#export(period.prod,period.sum,period.max,period.min)
#export(.chob,write.chob,get.chob,release.chob)

export(.chob)
export(.chart.theme,chartTheme)

export(listTA,
       setTA,
       unsetTA,
       
       addTA,
       chartTA,
       newTA,

       dropTA,
       moveTA,
       swapTA)

export(zoomChart,zooom)

#  No idea why these are exported?  debugging???
#export(sM,bM)

export(
       # quantmod-only code
       addVo,       # volume
       addExpiry,   # expiration dates
       addEnvelope, # envelope

       addShading,  chartShading,
       addLines,
       addPoints

      # package:graphics functionality wrappers NYI
      #add.lines,
      #add.points,
      #add.curve,
      #add.rect,
      #add.segments,
      
      )

     

# TTR functionality
export(
       # Moving Averages
       addSMA,   	# simple moving average
       addEMA,   	# exponential moving average
       addWMA,   	# weigthed moving average
       addDEMA,  	# double exponential moving average
       addEVWMA, 	# elastic, volume-weighted moving average
       addZLEMA, 	# zero lag exponential moving average

      # not yet implemented
      #addOBV,      # on balance volume
      #addCLV,      # close location value
      #addEMV,      # ease of movement 
      #addKST,      # know sure thing
      #addMFI,      # money flow index
      #addTDI,      # trend detection index
      #addVHF,      # vertical horizontal filter
      #addZigZag,   # Zig-Zag
      #addAroon,    # aroon
      #addChAD,     # chaikin AD
      #addChVol,    # chaikin Volatility
      #addVol,      # volatility
      #addWAD,      # william's AD

       addSMI,   	# stochastic moving average
       addADX,   	# directional movement index 
       addDPO,   	# de-trended price oscillator 
       addCCI,   	# commodity channel index
       addCMF,   	# chaikin money flow
       addCMO,   	# chande momentum oscillator
       addMomentum, # momentum
       addATR,      # average true range
       addTRIX,     # triple smoothed exponential oscillator
       addRSI,      # relative strength index
       addROC,      # rate of change
       addWPR,      # william's %R
       addSAR,      # parabolic stop-and-reverse
       addMACD,     # moving average convergence divergence
       addBBands    # Bollinger Bands
      #addPctB      # Bollinger %b
      #addBBwidth   # Bollinger band width
      )


export(
       modelData,
       modelSignal,

       Op, has.Op,
       Lo, has.Lo,
       Hi, has.Hi,
       Cl, has.Cl,
       Vo, has.Vo,
       Ad, has.Ad,

       OHLC, has.OHLC, is.OHLC, # OHLC extraction and test
       HLC, has.HLC, is.HLC,    # HLC  extraction and test

       # quick delta calculation functions
       OpCl, OpOp, ClCl, OpHi, OpLo, LoCl, HiCl, LoHi,

       seriesHi,seriesLo,
       seriesIncr, seriesDecr,
       seriesAccel, seriesDecel,

       Delt,
       Next,
       Lag,

       options.expiry,futures.expiry,

    periodReturn,
    dailyReturn,weeklyReturn,monthlyReturn,quarterlyReturn,annualReturn,
    yearlyReturn,
    allReturns,
    tradeModel,
#    saveModels,
#    loadModels,
#	period.apply,
#	breakpoints,
	specifyModel,
	getModelData,
#    predictModel,
    getFinancials,getFin,
    viewFinancials,viewFin,
    getDividends,
    getQuote,
    standardQuote,
    yahooQF,
    getSymbols,
    getSymbols.MySQL,
    getSymbols.SQLite,
    getSymbols.mysql,
    getSymbols.FRED,
    getSymbols.yahoo,
    getSymbols.oanda,
#    getSymbols.IBrokers,
    getSymbols.csv,
    getSymbols.rda,
    getSymbols.RData,
    getSymbols.google,
    getFX,
    getMetals,
    oanda.currencies,
    showSymbols,
    removeSymbols,
    saveSymbols,
    fittedModel,
	buildModel,
	buildData,
    is.quantmod,
    is.quantmodResults,
    as.quantmod.OHLC)
export(setSymbolLookup)
export(getSymbolLookup)
export(saveSymbolLookup)
export(loadSymbolLookup)
#export(tradeLog)
#export(gainloss)
export(chartSeries)
export(reChart)
export(barChart)
export(lineChart)
export(candleChart)
S3method(seriesHi,default)
S3method(seriesHi,ts)
S3method(seriesLo,default)
S3method(seriesLo,ts)
S3method(print,financials)
S3method(print,chart.theme)
S3method(Next,zoo)
S3method(Next,numeric)
S3method(Next,data.frame)
S3method(Next,quantmod.OHLC)
S3method(Lag,default)
S3method(Lag,numeric)
S3method(Lag,data.frame)
S3method(Lag,zoo)
S3method(Lag,xts)
S3method(Lag,quantmod.OHLC)
S3method(formula,quantmod)
S3method(fitted,quantmod)
S3method(fitted.values,quantmod)
S3method(coef,quantmod)
S3method(coefficients,quantmod)
S3method(logLik,quantmod)
S3method(vcov,quantmod)
S3method(residuals,quantmod)
S3method(resid,quantmod)
S3method(anova,quantmod)
S3method(plot,quantmod)
S3method(plot,chobTA)
S3method(plot,quantmodResults)
S3method(as.zoo,data.frame)
S3method(as.zoo,quantmod.OHLC)
S3method(as.quantmod.OHLC,data.frame)
S3method(as.quantmod.OHLC,zoo)
S3method(as.quantmod.OHLC,quantmod.OHLC)
S3method('[',quantmod.OHLC)
#S3method(periodReturn,zoo)
#S3method(periodReturn,quantmod.OHLC)
#S3method(periodReturn,quantmodResults)
S3method(predictModel,default)
S3method(predictModel,nnet)
S3method(predictModel,mars)
S3method(predictModel,polymars)
S3method(predictModel,lars)
S3method(predictModel,rpart)
S3method(predictModel,tree)
S3method(predictModel,randomForest)

# trade signal functionality
export(peak, valley)

exportClass(quantmod)
exportClass(quantmodResults,quantmodReturn)
exportClass(tradeLog)
exportClass(chob,chobTA)
exportMethods(show,summary,'fittedModel<-')

********************************************************************************
********************************************************************************

quantmod wishlist: as of Mar 21, 2008

********************************************************************************
********************************************************************************

  
  - Documentation (web and vignettes) :
    1. charting and indicator overlays!
    2. building models
    3. testing models
    4. extending quantmod
    5. package/inteface preferences
  
  - Move to R-forge for devel tools [done]
  
  - getSymbols.skeleton
  - buildModel.skeleton
  - addTA.skeleton [done]

  - convert to xts from zoo throughout.  Simplify data methods [done]
  
  - try to remove dependence on fSeries and its (etc).  Through 'xts'???

FUNCTIONALITY:

  - getFundamentals.google and getFundamentals to download data
    from google.  Possibly add arbitrary downloads from finance.yahoo.com
    using http://www.gummy-stuff.org/Yahoo-data.htm formats
    [ renamed getFinancials (google) done - jar, getQuote - done ]

  - tradeRule and tradeLog

  - move all quantmod.OHLC to c('OHLC','xts','zoo') format - eventually move
    to new package all together [ done ]


CHARTS:
  - add /demo script

  - add addHolidays/Weekends function to add in missing data with NA [see fillIndex beta in 'xts']
    [this is not really good - as any TA indicators will have to jump? past the NAs - jar]

  - liveChart function - used in conjunction with RT data feeds [SEE BELOW]

  - add x to reChart to allow for updated/different data, which may
    be used in conjuction with a RT feed callback such as in the IBrokers
    package

  - add 'periodicity' argument to chartSeries

  - dropTA function to remove TA indicators applied [moveTA and swapTA added as well: 2/16/2008 - jar]
    [updated to remove _all_ TA by position in TA list. Still buggy - jar]

  - add subset argument to chartSeries (et al) and buildModel function to pass
    along to underlying [.xts method [done, along with zooom & zoomChart - jar ]

  - mask lagged indicator days - use full dataset for calculation and a
    seperate subset for actual plotting.  (using above [.xts method) [ done see above - jar ]

  - multiple series in one line chart, or in one window - possibly
    mchartSeries, mbarChart, mlineChart, mcandleChart plus multiple
    series normal command interpretation
     ** OR **
    partition device in n-regions and have chartSeries.chob check
    [chartLayout is close to a solution for the second idea]

  - HSV color schemes from vcd or colorbrewer - or built in

  - finish TA integration with TTR

  x additional charting tools, like seriesHi, seriesLo, lines, points,...

  x allow for indicators to be drawn under series - BBands, Envelopes...

  - performance charts:
    - periodReturn - chartSeries method(no!) to handle
    - modelResults
    - integrate with PerformanceAnalytics

  - New rules functions to be implemented:

    recentTop(nback
    recentBot(nback
    recentHi(nback
    recentLo(nback

    crossAbove(level
    crossBelow(level

    levelAbove(
    levelBelow(

    higherHi(nback
    higherLo(nback

    lowerHi(nback
    lowerLo(nback

    newHi(nback
    newLo(nback

    seriesIncr  [ diff( > 0 ]
    seriesDecr  [ diff( < 0 ]

    seriesAccel [ diff(diff > 0 ]
    seriesDecel [ diff(diff < 0 ]

TESTING:

  - regression testing suite, via RUnit.
